1)암시적 형변환
	1) 날짜 자료형의 값들은 자동으로 문자열로 변환됨
	2) '1200'와 같은 숫자가 문자열로 된 자원들은 숫자로 자동 변환됨
	3) 1200과 같은 숫자가 문자열로 자동 변환됨

2) 명시적 형변환
	1) SQL문장 내에서 변환 함수를 사용하여 특정 자원을 원하는 자료형으로
	   반환 하는것!
	예를 들면 date_format함수를 이용하여 날짜 자원을 만드는 행위
	SELECT CASE('100' AS UNSIGNED) as num;

3) 데이터 그룹화
	지금까지는 각 테이블 자체가 하나의 그룹이었고, 이제는 각 테이블에서
	소그룹을 만들어 결과를 소그룹별로 얻고자 할 떄
	그룹 생성법을 알아야 가능하다.

Ex) emp테이블에서 각 부서별 인원수를 출력하자!

	SELECT deptno, COUNT(*) FROM emp 
	GROUP BY deptno
   	ORDER BY deptno;

	COUNT 숫자를 세어주는 얘

Ex) emp테이블에서 각 부서별 인원수, 그리고 급여의 평균과 총액을 구하자!
	
	SELECT deptno, COUNT(*),AVG(sal),SUM(sal),MAX(sal),MIN(sal)
	FROM emp
	GROUP BY deptno;

문제1) emp테이블에서 직종별(job) 급여의 합과 평균을 구하시오!

	SELECT job,SUM(sal),AVG(sal),COUNT(*)
	FROM emp
	GROUP BY job;

문제2) emp테이블에서 각 부서별 보너스 (comm)의 합, 평균을 구하시오!
	만약 NULL이면 제대로 출력이 안됨
	comm이라는 컬럼에 NULL을 가진 자원은 0드로 대체하는 문장
	IFNULL(comm,0)

	SELECT deptno,COUNT(*), SUM(IFNULL(comm,0)), FLOOR(AVG(IFNULL(comm,0)))
	FROM emp
	GROUP BY deptno;

	NULL값을 다른값으로 대체할 때는 IFNULL함수 사용!!
	오라클에서는 NVL함수를 사용한다.
	만약 특정 부서의 인원들 중에서 3명이 보너스를 받지 못하여
	평균을 구하는 연산에서 제외된다.
	그렇지 않고 전체 인원으로 평균을 구해야한다면 IFNULL 함수로 
	null값을 0으로 대체한다

Ex) emp테이블에서 연봉을 계산하는 SELECT문장을 기술해 보자(급여 * 보너스)

	SELECT *,sal *IFNULL(comm,1) FROM emp;

Ex) 분석가들의 급여 평균을 구하자!
	
	SELECT job,AVG(sal)
	FROM emp
	WHERE job ='ANALYST';

-----------------------------------------------------------

	SELECT job,AVG(sal)
	FROM emp
	WHERE job ='ANALYST';
	GROUP BY job;

SQL문의 실행 순서
	FROM 과 JOIN ---> WHERE ---> GROUP BY ---> HAVING ---> SELECT --->ORDER BY

문제3)  emp테이블에서 직종이 'CLERK' 또는 'SALESMAN'인 사원들중
	 	최대 급여를 구하는 SELECT문은?

	SELECT MAX(sal) FROM emp
	WHERE job IN('CLERK' , 'SALESMAN');

	위는 직종이 'CLERK' 과 'SALESMAN'들을 모두 합하여 최대값을 구한다.
	따로 구하고 싶다면 그룹화 해야 함!

	SELECT job, MAX(sal) FROM emp
	WHERE job IN('CLERK' , 'SALESMAN')
	GROUP BY  job;

Ex) emp테이블에서 각 부서별 인원수, 급여의 합을 구하는 SELECT문을 구하자?
	
	SELECT deptno, COUNT(*), SUM(sal) FROM emp
	GROUP BY deptno;

	위의 결과에서 인원수가 7명 이상인 부서만 확인하고 싶다면
	/*순서가 WHERE가 먼저임 그래서 안됨 그룹함수일때 접근하고 싶으면 HAVING절 사용*/

	SELECT deptno, COUNT(*), SUM(sal) FROM emp
	GROUP BY deptno
	HAVING COUNT(*) >= 7;

	/*조건식에 그룹함수(MAX,MIN,SUM, AVG,COUNT,...)가 포함된다면 
	WHERE절에 기술하지 못하고 HAVING절에 기술해야한다. */

	SELECT deptno, COUNT(*), SUM(sal) FROM emp
	GROUP BY deptno
	HAVING COUNT(*) >= 7;

4.SUBQUERY
	서브쿼리는 특정 SQL문장 안에 또 다른 SQl문장이 포함된 것

	[장점]
	DB에 여러번 접속해야 하는 상황을 한번에 처리가 가능하게 해 준다.
	한마디로 DB접속 되는 횟수를 줄이고, 속도를 증가시킨다.

	서브쿼리를 사용할 수 있는 곳

	 - WHERE, HAVING
	 - INSERT 구문에 INTO
	 - UPDATE 구문에 SET
	 - SELECT 또는 DELETE구문의 FROM

Ex) emp테이블에서 사원 이름이 'SMITH'이고 직종이 'CLERK'인
	사원의 급여보다 더 많이 받는 사원들의 정보를 사번, 이름, 직종, 급여 순으로 출력하자!

	[풀이]
		1) 먼저 이름이  'SMITH'이고 직종이 'CLERK'인 사원의 급여를 알아내야 한다.
		
	SELECT sal FROM emp
	WHERE ename = 'SMITH; AND job ='CLERK';

	2) 1에서 알아낸 결과 800이라는 급여보다 더많이 받는 사원들의 정보를 출력!
	
	SELECT empno,ename,job,sal
	FROM emp
	WHERE sal > 800;

	위는 2번에 걸쳐 실행하는 상황이다. 이것을 서브쿼리로 바꿔보자!
	SELECT empno,ename,job,sal
	FROM emp
	WHERE sal > SELECT sal FROM emp
			WHERE ename = 'SMITH AND job ='CLERK';

문제4) emp테이블에서 사번이 7521번인 사원의 직종과 같고 7844번 사원의 
	급여보다 많이 받는 사원들의 정보를 사번, 이름, 직종, 급여, 입사일 순으로 출력하시오!

	-- 1)사번이 7521인 사원의 직종 알아내기
	SELECT job FROM emp
	WHERE empno = 7521;

	-- 2)사번이 7844인 사원의 급여 알아내기
	SELECT sal FROM emp
	WHERE empno=7844;

	-- 3) 위의 1)과 2)의 결과를 가지고 원하는 정보를 얻기 위해 문장 만들기
	SELECT empno,ename,job,sal,hiredate
	FROM emp
	WHERE sal>=1500 AND
	job ='SALESMAN';

	-- 4)위 의 SQL문장들을 조합하면...
 	SELECT empno,ename,job,sal,hiredate
	FROM emp
	WHERE sal>=(SELECT sal FROM emp
	WHERE empno=7844) AND
	job =(SELECT job FROM emp
	WHERE empno = 7521);

문제5) emp테이블에서 급여가 3000이상인 사원들 중
	입사일이 1982년 이전에 입사한 사원들의 정보를
	사번, 이름,급여, 입사일 순으로 출력하자!

	SELECT empno, ename, sal, hiredate
	FROM emp
	WHERE hiredate <'1982-01-01'
	AND sal >= 3000;

	-- 위는 emp테이블 전체를 대상으로 검색을 수행한다.
	-- 하지만 다음은 내용이 그렇지 않다.
	SELECT a.empno, a.ename, a.sal, a.hiredate
	FROM (SELECT * FROM emp WHERE sal>= 3000) a
	WHERE a.hiredate <'1982-01-01';
	
Ex)급여가 3000이상인 사원들의 부서코드와 부서명을 출력하자!
	
	--1) 먼저 급여가 3000 이상이 사원들의 부서코드를 알아내야한다.
	SELECT deptno FROM emp
	WHERE sal >=3000;

	-- 2) 위를 수행하면 결과가 20번 부서는 2개가 나온다. 그래서 중복된 값을 제거해야함
	SELECT distinct deptno FROM emp
	WHERE sal >=3000;

	-- 3) 앞서 구한 10,20번을 가지고 있는 dept테이블에서 조건을 사용하여 
		부서코드와 부서명을 출력하면 된다.
	SELECT deptno,ename FROM dept
	WHERE deptno IN(10,20);

	-- 4) 위의 문장들을 하나로 합쳐서 결과를 확인하자!
	SELECT deptno,dname FROM dept
	WHERE deptno IN(SELECT distinct deptno FROM emp
	WHERE sal >=3000);


