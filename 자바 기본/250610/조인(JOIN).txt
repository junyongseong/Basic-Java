5. 조인(JOIN)
	데이터 베이스의 테이블 간 결합을 의미한다.
	여러개의 테이블에 자원들이 흩어져 있는 상태에서 데이터를 
	마치 하나의 테이블에서 보는 것 처럼 결과를 내고 싶을 때 JOIN을 사용한다.

Ex) 원하는 결과가 다음과 같다면...
-- 사번 이름, 직종, 입사일, 부서코드, 부서명
-- |---------emp-----------|--------dept-------|
-- 이렇게 하나의 테이블에 있는 것 처럼 결과를 얻기 위해
-- 여러 개의 테이블 간 기본키와 외래키의 연결을 이용하여 JOIN을 사용할 때 가능하다.
-- 기본키 : 중복불가, null 불가 
-- 외래키 : 중복가능, null 불가

	SELECT e.empno, e.ename, e.job, e.hiredate, d.deptno, d.dname
	FROM emp e INNER JOIN dept d
   	ON e.deptno =d.deptno;

조인의 종류
	1) INNER JOIN : 교집합

	SELECT * FROM emp INNER JOIN dept
	ON emp.deptno = dept.deptno;

--각 부서별 도시명을 출력하자!
--	부서코드. 부서명, 도시코드, 도시명 순으로 출력하자
	|------dept-------|-----locations-----|

	SELECT d.deptno, d.dname, l.loc_code, l.city
	FROM dept d INNER JOIN locations l
	ON d.loc_code = l.loc_code;

문제1) 각 테이블 간 연결하여 각 사원들이 누가 어떤 도시에 있는 부서에서
	근무하는지 출력하자!
	사번, 이름, 직종, 입사일, 부서코드, 부서명, 도시명 순으로 출력하시오!

	SELECT e.empno, e.ename, e.job,e.hiredate, d.deptno, d.dname, l.city
	FROM emp e INNER JOIN dept d INNER JOIN locations l
	ON e.deptno =d.deptno AND d.loc_code = l.loc_code; 

-- 	위는 조인된 테이블끼리 참조되는 동일한 자원들만 보여준다.
-- 	그래서 사번이 1000번인 이도라는 사원의deptbo값을 null로 처리하고
-- 	다시 실행하면 결과로 포함되지 않는다.
-- 	때에 따라 이도같은 자원들도 결과로 포함시키고 싶을 때가 있다.
-- 	이때 사용하는 것이 바로 Left join /Right Join 즉 Outer Join이다.

-- LEFT JOIN
--	왼쪽 테이블의 자원들을 연결성을 고려하지 않고 모두 출력하고,
-- 	오른쪽 테이블의 자원들은 연결되어 일치하는 자원들만 출력된다.	

	SELECT e.empno, e.ename, e.job,e.hiredate, d.deptno, d.dname
	FROM emp e LEFT OUTER JOIN dept d
	ON e.deptno =d.deptno;

-- 현재 사원들과 부서간의 연결에서 부서는 존재하지만 근무하는
-- 구성원이 없는 부서가 무엇인지? 알아내자!
	SELECT e.*,d.deptno,d.dname
	FROM emp e RIGHT OUTER JOIN dept d
	ON e.deptno = d.deptno;

-- 문제2) emp테이블에서 직종이 'ANALYST'인 사원들의 정보를
-- 사번, 이름, 직종, 급여, 부서명, 도시코드 순으로 출력하시오!

 	SELECT e.empno, e.ename, e.job, e.sal, d.dname, d.loc_code
	FROM emp e LEFT OUTER JOIN dept d
	ON e.deptno = d.deptno
	WHERE e.job ='ANALYST';

-- 위의 내용을 서브쿼리로 한다면...
	SELECT e.empno, e.ename, e.job,e.sal, d.dname, d.loc_code
	FROM (SELECT  * FROM emp WHERE job ='ANALYST') e LEFT OUTER JOIN dept d
	ON e.deptno = d.deptno;

--위의 내용에서 도시명을 하나 추가해서 출력하려 한다면...

	SELECT e.empno, e.ename, e.job,e.sal, d.dname, d.loc_code, l.city
	FROM (SELECT  * FROM emp WHERE job ='ANALYST') e LEFT OUTER JOIN dept d
	ON e.deptno = d.deptno
   	LEFT OUTER JOIN locations l 
   	ON d.loc_code =l.loc_code;

-- 문제3) 'DALLAS'에서 근무하는 사원들의 정보를
-- 	사번, 이름, 직종, 입사일, 부서코드, 도시명 순으로 출력하시오!

	SELECT e.empno, e.ename, e.job,e.sal, d.dname, d.loc_code, l.city
	FROM emp e INNER JOIN DEPT d
   	INNER JOIN(SELECT * FROM locations WHERE city ='DALLAS') l
    	ON e.deptno = d.deptno
   	AND d.loc_code = l.loc_code;

-- 문제4) 각 사원들의 관리자(MGR)가 누구인지를 알아내어
--	사번, 이름, 관리자 사번,관리자명 순으로 출력하시오
	
	SELECT e.empno, e.ename, e.mgr as ManagerNumber, m.ename as Manager
	FROM emp e INNER JOIN emp m
	ON e.mgr=m.empno;



	